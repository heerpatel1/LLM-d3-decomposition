Can you label this program without changing its order?:

width = 900

height = 500

margin = ({
  top: 10,
  right: 100,
  bottom: 30,
  left: 50
})

cars = d3.json(cars_url, d3.autoType)

xScale = d3.scaleLinear(
  d3.extent( cars, d => d.Miles_per_Gallon ),
  [ margin.left, width - margin.right ]
  )

yScale = d3.scaleLinear(
  d3.extent( cars, d => d.Horsepower ),
  [ height - margin.bottom, margin.top ]
  )

colors = d3.scaleOrdinal().range(d3.schemePastel1)

xAxis = d3.axisBottom(xScale)

yAxis = d3.axisLeft(yScale)

legend = {
  const svg = d3.create('svg')
      .attr('width', 900)
      .attr('height', 25)

  const Origin = cars.reduce((acc, d) => {
    acc[d.Origin] = true
    return acc
  },{})

  svg.selectAll('g')
    .data( Object.keys(Origin).sort((a,b) => a.charAt(0) == 'H' ? 1 : -1) )
    .join('g')
      .attr('transform', (d,i) => `translate(${i * 125},5)`)
    .call(g => g
       .append('rect')
         .attr('width', 20)
         .attr('height', 20)
         .style('fill', d => colors(d))
     )
    .call(g => g
       .append('text')
         .attr('y', 10)
         .attr('x', 25)
         .attr('dy', '0.35em')
         .style('font-size', 12)
         .style('font-family', 'sans-serif')
       .text(d => d)
     )

  return svg.node()

}

chart = {

  const svg = html `<svg width="900" height="500" />`

  const g = d3.select(svg)
     .append('g')
        .style('font-family', 'sans-serif')
        .style('font-size', 10)

  g
    .selectAll('g')
    .data( cars )
    .join('g')
      .attr('class', 'scatter-point')
      .attr('transform', d => `translate(${xScale(d.Miles_per_Gallon)},${yScale(d.Horsepower)})`)
    .call(g => g
          .append('circle')
            .attr('r', 5)
            .style('stroke', d => colors( d.Origin ))
            .style('stroke-width', 2)
            .style('fill', d => colors(d.Origin ))
     )

  d3.select(svg)
    .append('g')
      .attr('class', 'y-axis')
      .attr('transform', `translate(${ margin.left }, 0)`)
    .call(yAxis)

  d3.select(svg)
    .append('g')
      .attr('class', 'x-axis')
      .attr('transform', `translate(0,${ height - margin.bottom })`)
    .call(xAxis)

  return svg

}

cars_url = datasets['cars.json'].url

datasets = require('vega-datasets@1')

d3 = require('d3@5')
