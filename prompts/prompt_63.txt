Can you label this program for me?:
chart = {
const arcs = pie ( data ) ;

const svg = d3 . create ( "svg" )
. attr ( "viewBox" , [ - width / 2 , - height / 2 , width , height ] ) ;

svg . append ( "g" )
. attr ( "stroke" , "white" )
. selectAll ( "path" )
. data ( arcs )
. join ( "path" )
. attr ( "fill" , d => color ( d . data . name ) )
. attr ( "d" , arc )
. append ( "title" )
. text ( d => `${ d . data . name }: ${ d . data . value . toLocaleString ( ) }` ) ;

svg . append ( "g" )
. attr ( "font-family" , "sans-serif" )
. attr ( "font-size" , 12 )
. attr ( "text-anchor" , "middle" )
. selectAll ( "text" )
. data ( arcs )
. join ( "text" )
. attr ( "transform" , d => `translate(${ arcLabel . centroid ( d ) })` )
. call ( text => text . append ( "tspan" )
. attr ( "y" , "-0.4em" )
. attr ( "font-weight" , "bold" )
. text ( d => d . data . name ) )
. call ( text => text . filter ( d => ( d . endAngle - d . startAngle ) > 0.25 ) . append ( "tspan" )
. attr ( "x" , 0 )
. attr ( "y" , "0.7em" )
. attr ( "fill-opacity" , 0.7 )
. text ( d => d . data . value . toLocaleString ( ) ) ) ;

return svg . node ( ) ;
}

 data = d3 . csv ( "https://gist.githubusercontent.com/sudheererla/67c8a0ca498a384400ba865941569e76/raw/405eec1c603b9cab4d5f978daaa2890e12a299e6/Unshoppable.csv" , d3 . autoType )

 color = d3 . scaleOrdinal ( )
. domain ( data . map ( d => d . name ) )
. range ( d3 . quantize ( t => d3 . interpolateSpectral ( t * 0.8 + 0.1 ) , data . length ) . reverse ( ) )

 height = Math . min ( width , 500 )

 arc = d3 . arc ( )
. innerRadius ( 0 )
. outerRadius ( Math . min ( width , height ) / 2 - 1 )

 arcLabel = {
const radius = Math . min ( width , height ) / 2 * 0.8 ;
return d3 . arc ( ) . innerRadius ( radius ) . outerRadius ( radius ) ;
}

 pie = d3 . pie ( )
. sort ( null )
. value ( d => d . value )

 d3 = require ( "d3@5" )
/////////////////////////////////////////////////////////////////////////////////////////////////
Here's the labeled program according to your request:

```javascript
// Label: createChart
chart = {
    // Create pie chart arcs from data
    // Label: createArcs
    const arcs = pie(data);

    // Create SVG element
    // Label: createSvgComponent
    const svg = d3.create("svg")
        .attr("viewBox", [-width / 2, -height / 2, width, height]);

    // Append group for paths with stroke color
    // Label: svgAppend
    svg.append("g")
        .attr("stroke", "white")
        .selectAll("path")
        .data(arcs)
        .join("path")
        .attr("fill", d => color(d.data.name))
        .attr("d", arc)
        // Append title to each path for tooltip
        .append("title")
        .text(d => `${d.data.name}: ${d.data.value.toLocaleString()}`);

    // Append group for text labels
    // Label: svgAppend
    svg.append("g")
        .attr("font-family", "sans-serif")
        .attr("font-size", 12)
        .attr("text-anchor", "middle")
        .selectAll("text")
        .data(arcs)
        .join("text")
        .attr("transform", d => `translate(${arcLabel.centroid(d)})`)
        // Append text elements with different attributes
        .call(text => text.append("tspan")
            .attr("y", "-0.4em")
            .attr("font-weight", "bold")
            .text(d => d.data.name))
        .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.25)
            .append("tspan")
            .attr("x", 0)
            .attr("y", "0.7em")
            .attr("fill-opacity", 0.7)
            .text(d => d.data.value.toLocaleString()));

    // Return the completed SVG node
    return svg.node();
}

// Label: data()
data = d3.csv("https://gist.githubusercontent.com/sudheererla/67c8a0ca498a384400ba865941569e76/raw/405eec1c603b9cab4d5f978daaa2890e12a299e6/Unshoppable.csv", d3.autoType);

// Label: colorComponent
color = d3.scaleOrdinal()
    .domain(data.map(d => d.name))
    .range(d3.quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), data.length).reverse());

// Label: setHeight
height = Math.min(width, 500);

// Label: arcShape
arc = d3.arc()
    .innerRadius(0)
    .outerRadius(Math.min(width, height) / 2 - 1);

// Label: arcLabel
arcLabel = {
    const radius = Math.min(width, height) / 2 * 0.8;
    return d3.arc()
        .innerRadius(radius)
        .outerRadius(radius);
};

// Label: pieShape
pie = d3.pie()
    .sort(null)
    .value(d => d.value);

// Label: setD3Version
d3 = require("d3@5");
```